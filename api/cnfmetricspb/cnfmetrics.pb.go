// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: cnfmetrics.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message representing one CNF Metric record.
type CnfMetric struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	CnfId string                 `protobuf:"bytes,1,opt,name=cnf_id,json=cnfId,proto3" json:"cnf_id,omitempty"`
	// Using a protobuf Timestamp for the metric's timestamp.
	Timestamp  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MetricType string                 `protobuf:"bytes,3,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"`
	// Use double so that both integer and fractional values work.
	Value float64 `protobuf:"fixed64,4,opt,name=value,proto3" json:"value,omitempty"`
	Unit  string  `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`
	// For simplicity, status is a string such as "Normal", "Warning", or "Info".
	Status        string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CnfMetric) Reset() {
	*x = CnfMetric{}
	mi := &file_cnfmetrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CnfMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CnfMetric) ProtoMessage() {}

func (x *CnfMetric) ProtoReflect() protoreflect.Message {
	mi := &file_cnfmetrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CnfMetric.ProtoReflect.Descriptor instead.
func (*CnfMetric) Descriptor() ([]byte, []int) {
	return file_cnfmetrics_proto_rawDescGZIP(), []int{0}
}

func (x *CnfMetric) GetCnfId() string {
	if x != nil {
		return x.CnfId
	}
	return ""
}

func (x *CnfMetric) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CnfMetric) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *CnfMetric) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *CnfMetric) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *CnfMetric) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// A request message to show a particular CNF metric.
// It might be based on the CNF ID.
type CnfMetricRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CnfId         string                 `protobuf:"bytes,1,opt,name=cnf_id,json=cnfId,proto3" json:"cnf_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CnfMetricRequest) Reset() {
	*x = CnfMetricRequest{}
	mi := &file_cnfmetrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CnfMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CnfMetricRequest) ProtoMessage() {}

func (x *CnfMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cnfmetrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CnfMetricRequest.ProtoReflect.Descriptor instead.
func (*CnfMetricRequest) Descriptor() ([]byte, []int) {
	return file_cnfmetrics_proto_rawDescGZIP(), []int{1}
}

func (x *CnfMetricRequest) GetCnfId() string {
	if x != nil {
		return x.CnfId
	}
	return ""
}

// A request message to create (insert) a new CNF metric.
type CreateCnfMetricRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metric        *CnfMetric             `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCnfMetricRequest) Reset() {
	*x = CreateCnfMetricRequest{}
	mi := &file_cnfmetrics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCnfMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCnfMetricRequest) ProtoMessage() {}

func (x *CreateCnfMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cnfmetrics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCnfMetricRequest.ProtoReflect.Descriptor instead.
func (*CreateCnfMetricRequest) Descriptor() ([]byte, []int) {
	return file_cnfmetrics_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCnfMetricRequest) GetMetric() *CnfMetric {
	if x != nil {
		return x.Metric
	}
	return nil
}

// A response message that wraps a CNF metric.
type CnfMetricResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metric        *CnfMetric             `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	Code          int64                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CnfMetricResponse) Reset() {
	*x = CnfMetricResponse{}
	mi := &file_cnfmetrics_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CnfMetricResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CnfMetricResponse) ProtoMessage() {}

func (x *CnfMetricResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cnfmetrics_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CnfMetricResponse.ProtoReflect.Descriptor instead.
func (*CnfMetricResponse) Descriptor() ([]byte, []int) {
	return file_cnfmetrics_proto_rawDescGZIP(), []int{3}
}

func (x *CnfMetricResponse) GetMetric() *CnfMetric {
	if x != nil {
		return x.Metric
	}
	return nil
}

func (x *CnfMetricResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

var File_cnfmetrics_proto protoreflect.FileDescriptor

const file_cnfmetrics_proto_rawDesc = "" +
	"\n" +
	"\x10cnfmetrics.proto\x12\fcnfmetricspb\x1a\x1fgoogle/protobuf/timestamp.proto\"\xbf\x01\n" +
	"\tCnfMetric\x12\x15\n" +
	"\x06cnf_id\x18\x01 \x01(\tR\x05cnfId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1f\n" +
	"\vmetric_type\x18\x03 \x01(\tR\n" +
	"metricType\x12\x14\n" +
	"\x05value\x18\x04 \x01(\x01R\x05value\x12\x12\n" +
	"\x04unit\x18\x05 \x01(\tR\x04unit\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\")\n" +
	"\x10CnfMetricRequest\x12\x15\n" +
	"\x06cnf_id\x18\x01 \x01(\tR\x05cnfId\"I\n" +
	"\x16CreateCnfMetricRequest\x12/\n" +
	"\x06metric\x18\x01 \x01(\v2\x17.cnfmetricspb.CnfMetricR\x06metric\"X\n" +
	"\x11CnfMetricResponse\x12/\n" +
	"\x06metric\x18\x01 \x01(\v2\x17.cnfmetricspb.CnfMetricR\x06metric\x12\x12\n" +
	"\x04code\x18\x02 \x01(\x03R\x04code2\xbf\x01\n" +
	"\x11CnfMetricsService\x12P\n" +
	"\rShowCnfMetric\x12\x1e.cnfmetricspb.CnfMetricRequest\x1a\x1f.cnfmetricspb.CnfMetricResponse\x12X\n" +
	"\x0fCreateCnfMetric\x12$.cnfmetricspb.CreateCnfMetricRequest\x1a\x1f.cnfmetricspb.CnfMetricResponseB\x03Z\x01.b\x06proto3"

var (
	file_cnfmetrics_proto_rawDescOnce sync.Once
	file_cnfmetrics_proto_rawDescData []byte
)

func file_cnfmetrics_proto_rawDescGZIP() []byte {
	file_cnfmetrics_proto_rawDescOnce.Do(func() {
		file_cnfmetrics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cnfmetrics_proto_rawDesc), len(file_cnfmetrics_proto_rawDesc)))
	})
	return file_cnfmetrics_proto_rawDescData
}

var file_cnfmetrics_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cnfmetrics_proto_goTypes = []any{
	(*CnfMetric)(nil),              // 0: cnfmetricspb.CnfMetric
	(*CnfMetricRequest)(nil),       // 1: cnfmetricspb.CnfMetricRequest
	(*CreateCnfMetricRequest)(nil), // 2: cnfmetricspb.CreateCnfMetricRequest
	(*CnfMetricResponse)(nil),      // 3: cnfmetricspb.CnfMetricResponse
	(*timestamppb.Timestamp)(nil),  // 4: google.protobuf.Timestamp
}
var file_cnfmetrics_proto_depIdxs = []int32{
	4, // 0: cnfmetricspb.CnfMetric.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: cnfmetricspb.CreateCnfMetricRequest.metric:type_name -> cnfmetricspb.CnfMetric
	0, // 2: cnfmetricspb.CnfMetricResponse.metric:type_name -> cnfmetricspb.CnfMetric
	1, // 3: cnfmetricspb.CnfMetricsService.ShowCnfMetric:input_type -> cnfmetricspb.CnfMetricRequest
	2, // 4: cnfmetricspb.CnfMetricsService.CreateCnfMetric:input_type -> cnfmetricspb.CreateCnfMetricRequest
	3, // 5: cnfmetricspb.CnfMetricsService.ShowCnfMetric:output_type -> cnfmetricspb.CnfMetricResponse
	3, // 6: cnfmetricspb.CnfMetricsService.CreateCnfMetric:output_type -> cnfmetricspb.CnfMetricResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_cnfmetrics_proto_init() }
func file_cnfmetrics_proto_init() {
	if File_cnfmetrics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cnfmetrics_proto_rawDesc), len(file_cnfmetrics_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cnfmetrics_proto_goTypes,
		DependencyIndexes: file_cnfmetrics_proto_depIdxs,
		MessageInfos:      file_cnfmetrics_proto_msgTypes,
	}.Build()
	File_cnfmetrics_proto = out.File
	file_cnfmetrics_proto_goTypes = nil
	file_cnfmetrics_proto_depIdxs = nil
}
